Things Not Yet Done but should get done

1/17/2017

o Create github account for Danny so we can share code. (1 hour) [done]
o Show Dan how to use github [done - emailed instructions]
o Watch more jQuery training video (1 hour) [done]

1/21/2017

o Figure out how to update the elapsed time [done]
  timerVar = setTimeout(timeoutCallback, timePeriod);

1/26/2017

o Change row background color immediately when we change toggle state of the timer [done]
o Add unique id column so we can easily track each task by id number [done]
o Store high-precision elapsed time as a JQuery Data item to prevent roundoff errors [done]
o Share time-chunk across all enabled tasks [done]

1/29/2017

o Dan tuned the look and feel of the web-app so it looks better
o Removed highlight of the row when you start the timer - this will mess up the nice zebra-coloring and it's really not needed.
o Updating elapsed time every 1 second now instead of every 5 seconds (not a resource issue at all)
o Made Title and Category editable in-place via contenteditable='true' setting
  <td id=Title contenteditable='true'> textual content </td>
o Double-clicking on Elapsed data clears the timer back to 0 seconds - but really want to edit the time for the day.

1/30/2017

o Added a Percentage column ; to see what percent of your time you spent today

1/31/2017

o We enable the [Delete] button only if an item or two is having it's elapsed time updated. If nothing
  is selected then no need to have the Delete button enabled.
o Today I submitted a question to Stackoverflow.com to find out how to get at each <td> value of 
  each row in a foreach loop given the <tr> object.

2/1/2017

o Cleaned up the CSS statements by removing things that were not required and accepting the Browser defaults.


FUTURE TO DOS

o Save changes out to a JSON file (or database)
o Read tasks from a JSON file (or database) --- currently including taskmanager.json file into the html
o Modify Existing Tasks (edit category, title, add/subtract hours or minutes from elapsed time)
o I'm currently using <table> object for the info. I believe there is a nicer TABLE .js package out there that I could use. Probably would allow sorting of columns and resizing of columns.
o Allow more than one person at a time to use this ( username based )
o Setup Beagle-bone Server - install html/css/javascript webpage here
  o setup apache server to host the webpages  (?)
o Learn how to run regression tests on this - Node.js ; nodeunit ; Mocha ; Vows ; Zombie ...

Maybe set priorities of these tasks?

Currently everything is working just fine on windows without needing a backend server, nothing fancy needed yet.

